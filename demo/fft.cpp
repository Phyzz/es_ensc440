#include "../lib/ffft/FFTReal.h"
#include <iostream>

int main(int agrc, char *argv[]) {
    float samples[512] = {845.0f, 719.0f, 458.0f, 186.0f, 30.0f, 74.0f, 294.0f, 579.0f, 798.0f, 836.0f, 671.0f, 398.0f, 144.0f, 22.0f, 99.0f, 333.0f, 
    615.0f, 812.0f, 829.0f, 651.0f, 375.0f, 128.0f, 19.0f, 113.0f, 355.0f, 635.0f, 820.0f, 819.0f, 631.0f, 352.0f, 113.0f, 20.0f, 
    129.0f, 378.0f, 655.0f, 828.0f, 810.0f, 609.0f, 330.0f, 98.0f, 22.0f, 145.0f, 401.0f, 675.0f, 834.0f, 799.0f, 588.0f, 308.0f, 
    85.0f, 27.0f, 162.0f, 425.0f, 693.0f, 839.0f, 787.0f, 566.0f, 286.0f, 73.0f, 31.0f, 181.0f, 450.0f, 712.0f, 844.0f, 774.0f, 
    544.0f, 265.0f, 63.0f, 35.0f, 200.0f, 473.0f, 729.0f, 848.0f, 760.0f, 522.0f, 243.0f, 53.0f, 42.0f, 220.0f, 496.0f, 745.0f, 
    850.0f, 746.0f, 499.0f, 223.0f, 45.0f, 51.0f, 240.0f, 519.0f, 760.0f, 848.0f, 729.0f, 476.0f, 204.0f, 37.0f, 60.0f, 261.0f, 
    542.0f, 774.0f, 845.0f, 713.0f, 452.0f, 185.0f, 31.0f, 70.0f, 283.0f, 564.0f, 786.0f, 841.0f, 694.0f, 428.0f, 167.0f, 27.0f, 
    82.0f, 304.0f, 586.0f, 798.0f, 835.0f, 676.0f, 405.0f, 149.0f, 23.0f, 95.0f, 327.0f, 607.0f, 809.0f, 829.0f, 656.0f, 381.0f, 
    132.0f, 21.0f, 109.0f, 349.0f, 629.0f, 818.0f, 821.0f, 636.0f, 359.0f, 117.0f, 19.0f, 124.0f, 371.0f, 649.0f, 826.0f, 811.0f, 
    616.0f, 336.0f, 102.0f, 22.0f, 140.0f, 395.0f, 669.0f, 833.0f, 802.0f, 594.0f, 314.0f, 89.0f, 25.0f, 158.0f, 419.0f, 688.0f, 
    839.0f, 791.0f, 573.0f, 292.0f, 76.0f, 29.0f, 176.0f, 443.0f, 707.0f, 843.0f, 778.0f, 550.0f, 271.0f, 65.0f, 34.0f, 195.0f, 
    467.0f, 724.0f, 847.0f, 764.0f, 529.0f, 249.0f, 55.0f, 40.0f, 214.0f, 491.0f, 741.0f, 849.0f, 750.0f, 506.0f, 229.0f, 46.0f, 
    48.0f, 234.0f, 513.0f, 756.0f, 847.0f, 734.0f, 482.0f, 209.0f, 38.0f, 57.0f, 255.0f, 535.0f, 770.0f, 844.0f, 718.0f, 459.0f, 
    191.0f, 33.0f, 67.0f, 277.0f, 558.0f, 783.0f, 840.0f, 699.0f, 435.0f, 171.0f, 28.0f, 79.0f, 299.0f, 580.0f, 795.0f, 836.0f, 
    681.0f, 412.0f, 153.0f, 24.0f, 92.0f, 320.0f, 602.0f, 806.0f, 830.0f, 661.0f, 388.0f, 137.0f, 21.0f, 105.0f, 343.0f, 623.0f, 
    817.0f, 823.0f, 642.0f, 365.0f, 121.0f, 19.0f, 120.0f, 366.0f, 644.0f, 826.0f, 814.0f, 622.0f, 342.0f, 106.0f, 22.0f, 136.0f, 
    388.0f, 664.0f, 833.0f, 804.0f, 600.0f, 320.0f, 93.0f, 24.0f, 153.0f, 412.0f, 683.0f, 838.0f, 794.0f, 579.0f, 298.0f, 80.0f, 
    28.0f, 170.0f, 436.0f, 702.0f, 843.0f, 782.0f, 556.0f, 277.0f, 68.0f, 33.0f, 189.0f, 460.0f, 719.0f, 845.0f, 768.0f, 534.0f, 
    255.0f, 58.0f, 38.0f, 209.0f, 483.0f, 736.0f, 847.0f, 754.0f, 512.0f, 235.0f, 49.0f, 45.0f, 228.0f, 507.0f, 752.0f, 847.0f, 
    739.0f, 489.0f, 215.0f, 41.0f, 54.0f, 248.0f, 529.0f, 765.0f, 844.0f, 722.0f, 466.0f, 196.0f, 34.0f, 64.0f, 270.0f, 552.0f, 
    780.0f, 841.0f, 706.0f, 442.0f, 177.0f, 29.0f, 75.0f, 292.0f, 573.0f, 792.0f, 837.0f, 686.0f, 419.0f, 159.0f, 26.0f, 87.0f, 
    314.0f, 595.0f, 805.0f, 832.0f, 667.0f, 395.0f, 142.0f, 23.0f, 101.0f, 335.0f, 617.0f, 815.0f, 826.0f, 648.0f, 372.0f, 126.0f, 
    20.0f, 115.0f, 358.0f, 637.0f, 824.0f, 817.0f, 628.0f, 349.0f, 111.0f, 20.0f, 130.0f, 381.0f, 658.0f, 831.0f, 807.0f, 608.0f, 
    328.0f, 96.0f, 23.0f, 147.0f, 404.0f, 676.0f, 837.0f, 797.0f, 585.0f, 306.0f, 84.0f, 27.0f, 165.0f, 428.0f, 695.0f, 841.0f, 
    786.0f, 564.0f, 284.0f, 72.0f, 31.0f, 183.0f, 452.0f, 713.0f, 843.0f, 773.0f, 542.0f, 262.0f, 61.0f, 36.0f, 202.0f, 476.0f, 
    731.0f, 846.0f, 759.0f, 520.0f, 241.0f, 52.0f, 43.0f, 222.0f, 499.0f, 746.0f, 847.0f, 744.0f, 497.0f, 222.0f, 44.0f, 51.0f, 
    242.0f, 522.0f, 762.0f, 845.0f, 728.0f, 473.0f, 202.0f, 37.0f, 60.0f, 263.0f, 544.0f, 777.0f, 842.0f, 711.0f, 450.0f, 183.0f, 
    31.0f, 72.0f, 285.0f, 566.0f, 790.0f, 838.0f, 693.0f, 427.0f, 165.0f, 27.0f, 83.0f, 306.0f, 588.0f, 801.0f, 833.0f, 674.0f, 
    403.0f, 148.0f, 23.0f, 96.0f, 328.0f, 609.0f, 811.0f, 827.0f, 655.0f, 379.0f, 131.0f, 21.0f, 110.0f, 350.0f, 630.0f, 821.0f, 
    819.0f, 635.0f, 357.0f, 116.0f, 19.0f, 126.0f, 374.0f, 651.0f, 828.0f, 811.0f, 615.0f, 335.0f, 102.0f, 22.0f, 141.0f, 396.0f, 
    670.0f, 833.0f, 801.0f, 593.0f, 313.0f, 88.0f, 25.0f, 159.0f, 420.0f, 689.0f, 838.0f, 789.0f, 571.0f, 291.0f, 76.0f, 29.0f, 
    177.0f, 444.0f, 707.0f, 841.0f, 777.0f, 549.0f, 269.0f, 65.0f, 34.0f, 195.0f, 468.0f, 725.0f, 844.0f, 764.0f, 527.0f, 249.0f};
    
    float fft_result[512];
    
    ffft::FFTReal <float> fft_object (512);
    
    fft_object.do_fft(fft_result, samples);
    
    std::cout << "Sample 0: " << fft_result[0] << std::endl;
    for(int i = 1; i < 255; ++i) {
        std::cout << "Sample " << i << ": " << fft_result[i] << " + j(" << fft_result[256 + i] << ")\n";
    }
    
    return 0;
}
